[] Handle request errors in frontend!
[] Handle OpenAI API errors!!!
[] Move pending and failed assistant message logic to backend
[] Rework message loading so we only load a portion of the chat
[] Set up some kind of superproject to test both the frontend and backend simultaneously
[x] Handle token expiration!
[] Fix message fetching happening before we check for token expiry...
[] Refetch user info from DB in case it changed!
[] Handle login expiry when sleeping
[] Parallelise tests 
[] add RegistrationCodeUse records whenever someone signs up
[] make code blocks expand to 100% message width as soon as started!
[] upgrade to typescript
  [] define schema for chat completion chunks
[] log unauthorized access attempts
[] sort chats by last used (last time user interacted with it)
[] change verifyUserSession to verifyUserBearerToken since we rarely use User and so the DB fetch is waste
[] check token expiry / login status local storage on focus
[] unit test frontend
[] frontend integration test
[] e2e test with click simulation!
[] e2e api test in backend with real api!
[] fix: potato model allows crashing the server when we can send configs!
[] test wrapper to verify we're not sending passwords or hashes across network
[] same for uuids

