[] Handle request errors in frontend!
[] Handle OpenAI API errors!!!
[x] Move pending and failed assistant message logic to backend
[] Set up some kind of superproject to test both the frontend and backend simultaneously
[x] Handle token expiration!
[] Fix message fetching happening before we check for token expiry...
[] Refetch user info from DB in case it changed!
[] Handle login expiry when sleeping
[x] Parallelise tests 
[] make code blocks expand to 100% message width as soon as started!
[] upgrade to typescript
  [] define schema for chat completion chunks
[] log unauthorized access attempts
[] change verifyUserSession to verifyUserBearerToken since we rarely use User and so the DB fetch is waste
[x] check token expiry / login status local storage on focus
[] unit test frontend
[] frontend integration test
[] e2e test with click simulation!
[] e2e api test in backend with real api!
[] fix: potato model allows crashing the server when we can send configs!
[] test wrapper to verify we're not sending passwords or hashes across network
[] same for uuids
[] use paranoid deletions
[] - sort chats by last used (last time user interacted with it)
[] put base64 user id inside token
[x] clear all chats on logout
[] - explore using HTTP only cookies for session storage
[x] - fix broken tests

Back alley v1 release:
[x] - register and login pages should redirect to landing if user is logged in
[x] - notify why login or register failed
[x] - handle spaces in registration (and login)
[x] - waitlist
[x] - fix RegistrationCodeUses not working
[] - finish sliding UI for mobile
[x] - on launch send a request to check if token still valid 
[] - fix chat loading
[] - add analytics
[] - 404 and error pages
[] - log all errors
[] - in progress AI message should be aligned left
[x] - add version tag to page
[] - scroll to bottom when new message is entered or a message is updated!
[] - encrypt user chats

Back alley v2 release:
[] - need to be able to share conversations!
[] - Rework message loading so we only load a portion of the chat
[] - push notifications
[] - log token usage
[] - store encryption keys in KMS
[] - respond with 'expired token' when token is expired
